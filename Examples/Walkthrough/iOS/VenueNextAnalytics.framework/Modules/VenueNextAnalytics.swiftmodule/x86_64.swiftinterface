// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2 (swiftlang-1103.0.32.1 clang-1103.0.32.29)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name VenueNextAnalytics
import Foundation
import Swift
@_exported import VenueNextAnalytics
@objc public protocol EventTrackable {
  @objc var eventName: Swift.String { get }
  @objc var metadata: [Swift.String : Any]? { get }
}
@objc public protocol PageViewTrackable {
  @objc var pageViewName: Swift.String { get }
  @objc var pageViewTitle: Swift.String { get }
}
@objc public protocol AnalyticsAdapter {
  @objc func track(event: VenueNextAnalytics.EventTrackable)
  @objc func track(name: Swift.String, metadata: [Swift.String : Any]?)
  @objc func register(userID: Swift.String?)
}
@_inheritsConvenienceInitializers @objc public class VNAnalytics : ObjectiveC.NSObject {
  public static let shared: VenueNextAnalytics.VNAnalytics
  public func track(event: VenueNextAnalytics.EventTrackable)
  public func track(name: Swift.String, metadata: [Swift.String : Any]? = nil)
  public static func initialize(with adapter: VenueNextAnalytics.AnalyticsAdapter)
  @objc deinit
  @objc override dynamic public init()
}
@_inheritsConvenienceInitializers @objc open class AnalyticsEvent : ObjectiveC.NSObject, VenueNextAnalytics.EventTrackable {
  @objc open var eventName: Swift.String {
    @objc get
  }
  @objc open var metadata: [Swift.String : Any]? {
    @objc get
  }
  @objc deinit
  @objc override dynamic public init()
}
@objc open class PageViewEvent : VenueNextAnalytics.AnalyticsEvent {
  @objc override open var eventName: Swift.String {
    @objc get
  }
  @objc override open var metadata: [Swift.String : Any]? {
    @objc get
  }
  public init(with page: VenueNextAnalytics.PageViewTrackable)
  @objc deinit
  @objc override dynamic public init()
}
@objc public enum AppSetting : Swift.Int {
  case pushNotificationsEnabled
  case pushNotificationsDisabled
  case locationEnabledWhenInUse
  case locationEnabledAlways
  case locationDisabled
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@objc open class AppSettingsEvent : VenueNextAnalytics.AnalyticsEvent {
  @objc override open var eventName: Swift.String {
    @objc get
  }
  @objc override open var metadata: [Swift.String : Any]? {
    @objc get
  }
  public init(with appSetting: VenueNextAnalytics.AppSetting)
  @objc deinit
  @objc override dynamic public init()
}
extension VenueNextAnalytics.AppSetting : Swift.Equatable {}
extension VenueNextAnalytics.AppSetting : Swift.Hashable {}
extension VenueNextAnalytics.AppSetting : Swift.RawRepresentable {}
